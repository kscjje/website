<?xml version="1.0" encoding="UTF-8"?><!--
  Description : 관리자 작업 로그

   수정일                    수정자                     수정내용
  =========     =======    =================================================
  2020.07.17   	진수진          최초 작성
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hisco.admin.log.mapper.LogMapper">

 	<resultMap id="adminLog" type="com.hisco.admin.log.vo.AdminLogVO">
		<result property="comcd" column="COMCD"/>
		<result property="logSeq" column="LOG_SEQ"/>
		<result property="connctAppgbn" column="CONNCT_APPGBN"/>
		<result property="conectId" column="CONECT_ID"/>
		<result property="conectIp" column="CONECT_IP"/>
		<result property="menuid" column="MENUID"/>
		<result property="erroryn" column="ERRORYN"/>
		<result property="errorcode" column="ERRORCODE"/>
		<result property="errormsg" column="ERRORMSG"/>
		<result property="methodGubun" column="METHOD_GUBUN"/>
		<result property="userName" column="KOR_NAME"/>
		<result property="menuNm" column="MENU_NM"/>
		<result property="targetUrl" column="CONNECT_URL"/>
		<result property="inqryMemberinfo" column="INQRY_MEMBERINFO"/>
	</resultMap>

	<sql id="where_list">
		<where>
			CONNCT_APPGBN = '2002'
			<if test="searchCondition == 1">AND
               CONNECT_URL LIKE CONCAT('%', #{searchKeyword}, '%')
           </if>
           <if test="searchCondition == 2">AND
               USER_ID LIKE CONCAT('%', #{searchKeyword}, '%')
           </if>
           <if test="searchCondition == 3">AND
               KOR_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
           </if>
           <if test="methodGubun != null and methodGubun != ''">AND
               METHOD_GUBUN = #{methodGubun}
           </if>
           <choose>
           	<when test="inqryMemberinfo != null">AND INQRY_MEMBERINFO IS NOT NULL</when>
           </choose>
           <if test="searchStartDts !=null and searchStartDts !=''">
				AND A.REGDATE >= STR_TO_DATE(#{searchStartDts} , '%Y-%m-%d')
			</if>
			<if test="searchEndDts !=null and searchEndDts !=''">
				AND STR_TO_DATE(CONCAT(#{searchEndDts} , ' ', '23:59:59') , '%Y-%m-%d %H:%i:%s') >= A.REGDATE
			</if>
          </where>
	</sql>

 	<select id="selectLogList" parameterType="com.hisco.admin.log.vo.AdminLogVO" resultMap="adminLog">
			SELECT  *
              FROM  (
            		SELECT
            			ROW_NUMBER() OVER (order by A.LOG_SEQ <choose><when test='searchOrderDir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>) RNUM,
	                   	A.CONECT_ID,
	                   	A.MENUID ,
	                   	A.REGDATE,
	                   	A.CONECT_IP,
	                   	A.METHOD_GUBUN,
	                   	A.CONNECT_URL,
	                   	A.INQRY_MEMBERINFO,
	                   	M.KOR_NAME,
	                   	F.MENU_NM
	              FROM SYSTEM_CNNTLOG A
	              	LEFT OUTER JOIN MNGR_ACNTMNG M ON M.COMCD = #{comcd} AND A.CONECT_ID = M.USER_ID
	              	LEFT OUTER JOIN COMTNMENUINFO F ON A.MENUID = F.MENU_NO
             		<include refid="where_list"/>
                ) ALL_LIST
			 <![CDATA[
             WHERE  RNUM  > #{firstIndex}
               AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
               ]]>
 	</select>

 	<select id="selectLogCount" parameterType="com.hisco.admin.log.vo.AdminLogVO" resultType="java.lang.Integer">
    	SELECT
            COUNT(*)
       	FROM SYSTEM_CNNTLOG A
       		LEFT OUTER JOIN MNGR_ACNTMNG M ON M.COMCD = #{comcd} AND A.CONECT_ID = M.USER_ID
     		<include refid="where_list"/>
 	</select>


 	<!-- 로그인 로그 등록 -->
	<insert id="logInsertLoginLog" parameterType="com.hisco.admin.log.vo.AdminLogVO">
		<![CDATA[
			INSERT INTO SYSTEM_CNNTLOG
				( LOG_SEQ
				  , COMCD
				  , CONNCT_APPGBN
				  , CONECT_ID
				  , CONECT_IP
				  , MENUID
				  , ERRORYN
				  , ERRORCODE
				  , ERRORMSG
				  , METHOD_GUBUN
				  , CONNECT_URL
				  , REGDATE )
			VALUES ( NEXTVAL(SYSTEM_CNNTLOG_SEQ)
				  , #{comcd}
			      , '2002'
				  , #{conectId}
				  , #{conectIp}
				  , #{menuid}
				  , NVL(#{erroryn},'N')
				  , #{errorcode}
				  , #{errormsg}
				  , #{methodGubun}
				  , #{targetUrl}
				  , SYSDATE())
				  ]]>

	</insert>


	<select id="selectWebLogList"  resultType="cMap">
		/* selectWebLogList */
    	SELECT
    	      MENU_NO
			 ,
			 <choose>
				<when test='searchCondition == "monthly"'> DATE_FORMAT(OCCRRNC_YMD, '%Y-%m') AS YMD</when>
				<otherwise>DATE_FORMAT(OCCRRNC_YMD, '%Y-%m-%d') AS YMD</otherwise>
			</choose>
			 , COUNT(*) CNT
		FROM COMTNWEBLOG T1
		WHERE
		<choose>
				<when test='searchCondition == "monthly"'>
	   			 OCCRRNC_YMD  <![CDATA[>=]]>  CONCAT(#{searchStartMonth},'01')
	   			AND OCCRRNC_YMD  <![CDATA[<=]]>  CONCAT(#{searchEndMonth},'01')
	   		</when>
	   		<otherwise>
	   			 OCCRRNC_YMD  <![CDATA[>=]]>  replace(#{startYmd}, '-' , '')
	   			AND OCCRRNC_YMD  <![CDATA[<=]]>  replace(#{endYmd}, '-' , '') 
	   		</otherwise>
	   	</choose>
		GROUP BY  MENU_NO,
		<choose>
			<when test='searchCondition == "monthly"'>
				DATE_FORMAT(OCCRRNC_YMD, '%Y-%m')
				ORDER BY DATE_FORMAT(OCCRRNC_YMD, '%Y-%m')
			</when>
			<otherwise>
				DATE_FORMAT(OCCRRNC_YMD, '%Y-%m-%d')
				ORDER BY DATE_FORMAT(OCCRRNC_YMD, '%Y-%m-%d')
			</otherwise>
		</choose>
 	</select>


 	<select id="selectDateList"  resultType="cMap">
		<choose>
			<when test='searchCondition == "monthly"'>
				WITH RECURSIVE A AS (
					SELECT 1 AS LEVEL UNION ALL SELECT 1+A.LEVEL FROM A WHERE A.LEVEL <![CDATA[ <= ]]> ( TIMESTAMPDIFF(MONTH,CONCAT('202111','01'),LAST_DAY(CONCAT('202202','01'))))
				)
				SELECT DATE_FORMAT(DATE_ADD(CONCAT(#{searchStartMonth},'01') ,interval level-1 MONTH), '%Y-%m') AS CAL_DATE FROM A

			</when>
			<otherwise>
				WITH RECURSIVE A AS (
					SELECT 1 AS LEVEL UNION ALL SELECT 1+A.LEVEL FROM A WHERE A.LEVEL <![CDATA[ <= ]]> ( DATEDIFF(#{endYmd},#{startYmd}))
				)
				SELECT DATE_ADD(STR_TO_DATE(#{startYmd},'%Y-%m-%d') ,interval level-1 day) AS CAL_DATE FROM A
			</otherwise>
		</choose>
 	</select>


	<!-- 에러 로그 등록 -->
	<insert id="insertErrorLog" parameterType="com.hisco.admin.log.vo.ErrorLogVO">
		CALL USP_SYSTEM_ERROR_INS(
			#{comcd}
		  , #{conectId}
		  , #{conectIp}
		  , #{connectUrl}
		  , #{errormsg}
		  , #{paramVal}
		  , #{refUrl}
		)
	</insert>	
	
	<insert id="insertErrorLog1" parameterType="com.hisco.admin.log.vo.ErrorLogVO">
		<![CDATA[
			INSERT INTO SYSTEM_ERRLOG
				( LOG_SEQ
				  , COMCD
				  , CONECT_ID
				  , CONECT_IP
				  , CONNECT_URL
				  , ERRORMSG
				  , PARAM_VAL
				  , REF_URL
				  , REGDATE )
			VALUES (NEXTVAL(SYSTEM_ERRLOG_SEQ)
				  , #{comcd}
				  , #{conectId}
				  , #{conectIp}
				  , #{connectUrl}
				  , #{errormsg}
				  , #{paramVal}
				  , #{refUrl}
				  , SYSDATE())
				  ]]>
	</insert>

	<select id="selectErrorLogList" parameterType="com.hisco.admin.log.vo.ErrorLogVO" resultType="com.hisco.admin.log.vo.ErrorLogVO">
		SELECT
               	*
          	FROM
          		SYSTEM_ERRLOG
       		ORDER BY
       			LOG_SEQ DESC
           LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
 	</select>

 	<select id="selectErrorLogCount" parameterType="com.hisco.admin.log.vo.AdminLogVO" resultType="java.lang.Integer">
    	SELECT
            COUNT(*)
       	FROM SYSTEM_ERRLOG A
 	</select>

	<select id="selectConnLogList"  resultType="cMap">
	    /* selectConnLogList */
		SELECT
			 MAIN.OCCRRNC_DE
		     , SUM(CASE WHEN  rqester_id IS NOT NULL  THEN 1 ELSE 0 END) AS MEM_COUNT
		     , SUM(CASE WHEN  rqester_id ='' THEN 1 ELSE 0 END) AS NON_COUNT
		FROM (
			SELECT
		<choose>
			<when test='searchCondition == "monthly"'> DATE_FORMAT(OCCRRNC_DE, '%Y-%m') AS OCCRRNC_DE</when>
			<otherwise>DATE_FORMAT(OCCRRNC_DE, '%Y-%m-%d') AS OCCRRNC_DE</otherwise>
		</choose>
		, rqester_id
		from comtnweblog
		WHERE url = '/web/main'
			<choose>
				<when test='searchCondition == "monthly"'>
		   			AND OCCRRNC_DE  <![CDATA[>=]]>  DATE_FORMAT(fn_DateTime_Convert(3, CONCAT(#{searchStartMonth},'01'), '0000'), '%Y-%m-%d %H:%i')
		   			AND OCCRRNC_DE  <![CDATA[<=]]>  DATE_FORMAT(fn_DateTime_Convert(3, LAST_DAY(CONCAT(#{searchEndMonth},'01')), '2359'), '%Y-%m-%d %H:%i')
		   		</when>
		   		<otherwise>
		   			AND OCCRRNC_DE  <![CDATA[>=]]>  DATE_FORMAT(fn_DateTime_Convert(3, #{startYmd}, '0000'), '%Y-%m-%d %H:%i')
		   			AND OCCRRNC_DE  <![CDATA[<=]]>  DATE_FORMAT(fn_DateTime_Convert(3, #{endYmd}, '2359'), '%Y-%m-%d %H:%i')
		   		</otherwise>
		   	</choose>
		) MAIN
		GROUP BY MAIN.OCCRRNC_DE
		ORDER BY 1

 	</select>


 	<select id="selectMemberLogList"  resultType="egovMap">
			SELECT  *
              FROM  (
            		SELECT
            			ROW_NUMBER() OVER (order by A.REGDATE <choose><when test='searchOrderDir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>) RNUM,
            			COUNT(*)OVER() AS TOT_COUNT,
	                   	A.REGDATE,
	                   	NVL(M.USER_ID,A.REGUSER) AS REGUSER,
	                   	A.MEM_NO,
	                   	M.USER_ID,
	                   	M.MEM_NM,
	                   	A.USER_IP,
	                   	A.REMARK,
	                   	A.UPDATELOG
	              FROM MEMBER_LOG A
	              	LEFT OUTER JOIN MEMBER M ON M.COMCD = A.COMCD AND A.MEM_NO = M.MEM_NO
             		WHERE
             			A.COMCD=#{comcd}
             			<if test="searchStartDts !=null and searchStartDts !=''">
							AND A.REGDATE >= STR_TO_DATE(#{searchStartDts} , '%Y-%m-%d')
						</if>
						<if test="searchEndDts !=null and searchEndDts !=''">
							AND STR_TO_DATE(CONCAT(#{searchEndDts} , ' ', '23:59:59') , '%Y-%m-%d %H:%i:%s') >= A.REGDATE
						</if>
						 <if test="searchCondition == 2">AND
						     A.USER_ID LIKE CONCAT('%', #{searchKeyword}, '%')
			           </if>
			           <if test="searchCondition == 1">AND
			               M.MEM_NM LIKE CONCAT('%', #{searchKeyword}, '%')
			           </if>
                ) ALL_LIST
			 <![CDATA[
             WHERE  RNUM  > #{firstIndex}
               AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
               ]]>
 	</select>


 	<!--  로그 개인정보 접속이력 등록 -->
	<insert id="logInsertPrivateLog" parameterType="com.hisco.admin.log.vo.AdminLogVO">
		<![CDATA[
			INSERT INTO SYSTEM_CNNTLOG
				( LOG_SEQ
				  , COMCD
				  , CONNCT_APPGBN
				  , CONECT_ID
				  , CONECT_IP
				  , MENUID
				  , ERRORYN
				  , ERRORCODE
				  , ERRORMSG
				  , METHOD_GUBUN
				  , CONNECT_URL
				  , INQRY_MEMBERINFO
				  , REGDATE )
			VALUES ( NEXTVAL(SYSTEM_CNNTLOG_SEQ)
				  , #{comcd}
			      , '2002'
				  , #{conectId}
				  , #{conectIp}
				  , #{menuid}
				  , NVL(#{erroryn},'N')
				  , #{errorcode}
				  , #{errormsg}
				  , 'R'
				  , #{targetUrl}
				  , #{inqryMemberinfo}
				  , SYSDATE())
				  ]]>

	</insert>


	<select id="selectAuthorLogList"  resultType="egovMap">
			SELECT  *
              FROM  (
            		SELECT
            			ROW_NUMBER() OVER (order by A.LOG_REGDATE <choose><when test='searchOrderDir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>) RNUM,
            			COUNT(*)OVER() AS TOT_COUNT,
	                   	A.LOG_REGDATE,
	                   	A.LOG_REG_USERID,
	                   	A.LOGNM,
	                   	A.USERID,
	                   	A.PG_OBJ,
	                   	M.KOR_NAME, 
	                   	NVL(C.AUTHOR_NM , A.PG_OBJ) AS AUTHOR_NM
	              FROM SYSTEM_PRMISN_LOG A
	              	LEFT OUTER JOIN MNGR_ACNTMNG M ON M.COMCD = A.COMCD AND A.USERID = M.USER_ID
	              	LEFT OUTER JOIN COMTNAUTHORINFO C ON C.AUTHOR_CODE=A.PG_OBJ
             		WHERE
             			A.COMCD=#{comcd}
             			<if test="searchStartDts !=null and searchStartDts !=''">
							AND A.LOG_REGDATE >= STR_TO_DATE(#{searchStartDts} , '%Y-%m-%d')
						</if>
						<if test="searchEndDts !=null and searchEndDts !=''">
							AND STR_TO_DATE(CONCAT(#{searchEndDts} , ' ', '23:59:59') , '%Y-%m-%d %H:%i:%s') >= A.LOG_REGDATE
						</if>
						 <if test="searchCondition ==1 and  searchKeyword !=''">AND
						     M.KOR_NAME LIKE CONCAT('%', #{searchKeyword}, '%')
			           </if>
			           <if test="searchCondition == 2 and  searchKeyword !=''">AND
			               M.USER_ID LIKE CONCAT('%', #{searchKeyword}, '%')
			           </if>
			           <if test="authorCode !=null and authorCode !=''">
							AND A.PG_OBJ=#{authorCode}
						</if>

                ) ALL_LIST
			 <![CDATA[
             WHERE  RNUM  > #{firstIndex}
               AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
               ]]>
 	</select>


 	<select id="selectWebVisitLogList"  resultType="egovMap">
			SELECT  *
              FROM  (
            		SELECT
            			ROW_NUMBER() OVER (order by A.OCCRRNC_DE <choose><when test='searchOrderDir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>) RNUM,
            			COUNT(*)OVER() AS TOT_COUNT,
	                   	A.OCCRRNC_DE,
	                   	A.URL,
	                   	A.REQUST_ID,
	                   	A.RQESTER_ID,
	                   	A.RQESTER_IP,
	                   	F.MENU_NM
	              FROM COMTNWEBLOG A
	              	LEFT OUTER JOIN COMTNMENUINFO F ON  A.MENU_NO = F.MENU_NO
             		<where>
             			<if test="searchStartDts !=null and searchStartDts !=''">
							AND A.OCCRRNC_DE >= STR_TO_DATE(#{searchStartDts} , '%Y-%m-%d')
						</if>
						<if test="searchEndDts !=null and searchEndDts !=''">
							AND STR_TO_DATE(CONCAT(#{searchEndDts} , ' ', '23:59:59') , '%Y-%m-%d %H:%i:%s') >= A.OCCRRNC_DE
						</if>
						 <if test="searchCondition ==1 and  searchKeyword !=''">AND
						    A.RQESTER_ID LIKE CONCAT('%', #{searchKeyword}, '%')
			           </if>
			          </where>
                ) ALL_LIST
			 <![CDATA[
             WHERE  RNUM  > #{firstIndex}
               AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
               ]]>
 	</select>

 	<select id="selectLoginLogList"  resultType="egovMap">
			SELECT  *
              FROM  (
            		SELECT
            			ROW_NUMBER() OVER (order by A.REGDATE <choose><when test='searchOrderDir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>) RNUM,
            			COUNT(*)OVER() AS TOT_COUNT,
	                   	A.CONECT_ID,
	                   	A.CONECT_IP,
	                   	A.CONECT_MEM_NO,
	                   	A.ERRORYN,
	                   	A.ERRORCODE,
	                   	A.ERRORMSG,
	                   	A.CONNCT_SNSKIND,
	                   	A.REGDATE,
	                   	F.MEM_NM
	              FROM WS_LOGIN_LOG A
	              	LEFT OUTER JOIN MEMBER F ON  A.CONECT_MEM_NO = F.MEM_NO
             		<where>
             			<if test="searchStartDts !=null and searchStartDts !=''">
							AND A.REGDATE >= STR_TO_DATE(#{searchStartDts} , '%Y-%m-%d')
						</if>
						<if test="searchEndDts !=null and searchEndDts !=''">
							AND STR_TO_DATE(CONCAT(#{searchEndDts} , ' ', '23:59:59') , '%Y-%m-%d %H:%i:%s') >= A.REGDATE
						</if>
						 <if test="searchCondition ==1 and  searchKeyword !=''">AND
						     A.CONECT_ID LIKE CONCAT('%', #{searchKeyword}, '%')
			           </if>
			           <if test="searchCondition ==2 and  searchKeyword !=''">AND
						     A.CONECT_MEM_NO LIKE CONCAT('%', #{searchKeyword}, '%')
			           </if>
			          </where>
                ) ALL_LIST
			 <![CDATA[
             WHERE  RNUM  > #{firstIndex}
               AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
               ]]>
 	</select>

 	<select id="selectPaywaitLogList"  resultType="egovMap">
			SELECT  *
              FROM  (
            		SELECT
            			ROW_NUMBER() OVER (order by
            				<choose><when test='searchOrder == "waittime"'>A.PAYWAIT_DATETIME </when><otherwise>A.LOG_SEQ </otherwise></choose>
            				<choose><when test='searchOrderDir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>) RNUM,
            			COUNT(*)OVER() AS TOT_COUNT,
	                   	A.LOG_SEQ,
	                   	A.PART_GBN,
	                   	A.RSVN_NO,
	                   	A.PAYWAIT_DATETIME,
	                   	A.REGDATE,
						(SELECT CD_NM FROM COT_GRPCD WHERE COMCD= #{comcd} AND GRP_CD='SM_PART_GBN' AND CD=A.PART_GBN) AS PART_NAME,
						P.EDC_PRGM_NM
	              FROM RSVN_PAYWAITTIME_LOG A
	              	LEFT OUTER JOIN EDC_RSVN_INFO R ON A.COMCD=R.COMCD AND A.RSVN_NO=R.EDC_RSVN_NO
	              	LEFT OUTER JOIN EDC_PROGRAM P ON R.COMCD=P.COMCD AND R.EDC_PRGM_NO = P.EDC_PRGM_NO
             		<where>
             			A.COMCD = #{comcd}
             			<if test="searchStartDts !=null and searchStartDts !=''">
							AND A.REGDATE >= STR_TO_DATE(#{searchStartDts} , '%Y-%m-%d')
						</if>
						<if test="searchEndDts !=null and searchEndDts !=''">
							AND STR_TO_DATE(CONCAT(#{searchEndDts} , ' ', '23:59:59') , '%Y-%m-%d %H:%i:%s') >= A.REGDATE
						</if>
						 <if test="searchCondition ==1 and  searchKeyword !=''">AND
						     A.RSVN_NO LIKE CONCAT('%', #{searchKeyword}, '%') 
			           </if>
			          </where>
                ) ALL_LIST
			 <![CDATA[
             WHERE  RNUM  > #{firstIndex}
               AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
               ]]>
 	</select>

 	<select id="selectNwpayLogList"  resultType="egovMap">
			SELECT  *
              FROM  (
            		SELECT
            			ROW_NUMBER() OVER (ORDER BY A.LOG_SEQ <choose><when test='searchOrderDir == "asc"'>ASC</when><otherwise>DESC</otherwise></choose>) RNUM,
            			COUNT(*) OVER() AS TOT_COUNT,
	                   	A.LOG_SEQ,
	                   	A.REQUEST_INFO,
	                   	A.RESULT_INFO,
	                   	A.REGDATE
	              FROM NW_PAY_LOG A
             		<where>
             			A.COMCD = #{comcd}
             			<if test="searchStartDts !=null and searchStartDts !=''">
							AND A.REGDATE >= STR_TO_DATE(#{searchStartDts} , '%Y-%m-%d')
						</if>
						<if test="searchEndDts !=null and searchEndDts !=''">
							AND STR_TO_DATE(CONCAT(#{searchEndDts} , ' ', '23:59:59') , '%Y-%m-%d %H:%i:%s') >= A.REGDATE
						</if>
						<if test="searchCondition !=null and searchCondition != ''">
							AND REQUEST_INFO LIKE CONCAT('%', #{searchCondition},'%')
						</if>
			          </where>
                ) ALL_LIST
			 <![CDATA[
             WHERE  RNUM  > #{firstIndex}
               AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
               ]]>
 	</select>

</mapper>