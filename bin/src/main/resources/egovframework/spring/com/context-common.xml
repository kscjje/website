<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		                http://www.springframework.org/schema/context 
		                http://www.springframework.org/schema/context/spring-context-4.0.xsd
        				http://www.springframework.org/schema/mvc 
        				http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        				http://www.springframework.org/schema/task 
        				http://www.springframework.org/schema/task/spring-task-4.0.xsd"> 
	
	<context:component-scan base-package="egovframework,com.hisco">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:include-filter type="annotation" expression="egovframework.rte.psl.dataaccess.mapper.Mapper"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<context:annotation-config/>
	
	<mvc:annotation-driven>
	</mvc:annotation-driven>
	
	<bean id="beforeLoggingAdvice" class="com.hisco.cmm.advice.BeforeMapperLoggingAdvice"/>
	<bean id="beforeCommonSetterAdvice" class="com.hisco.cmm.advice.BeforeCommonSetterAdvice"/>
	<bean id="proxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>*Mapper</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>beforeCommonSetterAdvice</value>
                <value>beforeLoggingAdvice</value>
            </list>
        </property>
    </bean>
	
	<!-- for Schedule Start -->
	<bean class="com.hisco.cmm.web.ScheduleController" />
	<task:annotation-driven scheduler="scheduler"/>
	<task:scheduler id="scheduler" pool-size="10"/>
	<!-- for Schedule End   -->

	<!-- 국제화 Message 설정 -->
	<bean id="messageSource" class="egovframework.com.cmm.util.EgovWildcardReloadableResourceBundleMessageSource">
		<property name="egovBasenames">
			<list>
				<value>classpath*:egovframework/message/com/**/*</value>
				<value>classpath:/egovframework/rte/fdl/idgnr/messages/idgnr</value>
				<value>classpath:/egovframework/rte/fdl/property/messages/properties</value>
				<value>classpath:/egovframework/egovProps/globals</value>
			</list>
		</property>
		 
		<property name="cacheSeconds">
			<value>60</value>
		</property>
	</bean>

    <bean id="egovMessageSource" class="egovframework.com.cmm.EgovMessageSource">
        <property name="reloadableResourceBundleMessageSource">
            <ref bean="messageSource" />
        </property>
    </bean>
    
	<!-- 실행환경에서 빈 이름 참조(AbstractServiceImpl) -->
	<bean id="leaveaTrace" class="egovframework.rte.fdl.cmmn.trace.LeaveaTrace">
		<property name="traceHandlerServices">
			<list>
				<ref bean="egov.traceHandlerService" />
			</list>
		</property>
	</bean>

	<bean id="egov.traceHandlerService" class="egovframework.rte.fdl.cmmn.trace.manager.DefaultTraceHandleManager">
		<property name="reqExpMatcher">
			<ref bean="egov.antPathMater" />
		</property>
		<property name="patterns">
			<list>
				<value>*</value>
			</list>
		</property>
		<property name="handlers">
			<list>
				<ref bean="egov.defaultTraceHandler" />
			</list>
		</property>
	</bean>

	<bean id="egov.antPathMater" class="org.springframework.util.AntPathMatcher" />

	<bean id="egov.defaultTraceHandler" class="egovframework.rte.fdl.cmmn.trace.handler.DefaultTraceHandler" />


    <!-- MULTIPART RESOLVERS -->
    <!-- regular spring resolver -->
    <bean id="spring.RegularCommonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="600000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>

    <!-- custom multi file resolver -->
    <bean id="local.MultiCommonsMultipartResolver" class="egovframework.com.cmm.web.EgovMultipartResolver">
        <property name="maxUploadSize" value="100000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>

    <!-- choose one from above and alias it to the name Spring expects -->
    <!-- alias name="local.MultiCommonsMultipartResolver" alias="multipartResolver" /-->
    <alias name="spring.RegularCommonsMultipartResolver" alias="multipartResolver" />

	<!-- spring ApplicationContext 를 사용할수 있게 주입 -->
    <bean id="springApplicationContext" class="com.hisco.cmm.util.SpringApplicationContext" />
</beans>